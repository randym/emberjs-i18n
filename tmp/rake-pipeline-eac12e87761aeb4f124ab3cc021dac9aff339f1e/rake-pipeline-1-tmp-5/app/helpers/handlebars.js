minispade.register('helpers/handlebars', "(function() {(function() {\n  var I18nBoundView, safe;\n\n  I18nBoundView = Ember.View.extend(Ember._Metamorph, {\n    templateName: 'i18nBoundView',\n    key: null,\n    valueDidChange: function() {\n      if (this.morph.isRemoved()) {\n        return;\n      }\n      return this.morph.html(this.valueForRender());\n    },\n    valueForRender: function() {\n      return safe(I18n.t(this.key));\n    },\n    init: function() {\n      this._super();\n      return EmberjsI18n.addObserver('locale', this, 'valueDidChange');\n    },\n    didInsertElement: function() {\n      return this.valueDidChange();\n    },\n    destroy: function() {\n      EmberjsI8n.removeObserver('locale', this, 'valueDidChange');\n      return this._super();\n    },\n    render: function(buffer) {\n      return buffer.push(this.valueForRender());\n    }\n  });\n\n  safe = function(content) {\n    return new Handlebars.SafeString(content);\n  };\n\n  Ember.Handlebars.registerHelper('t', function(key, options) {\n    var bindView, view;\n    view = options.data.view;\n    bindView = view.createChildView(I18nBoundView, {\n      key: key\n    });\n    view.appendChild(bindView);\n    return false;\n  });\n\n}).call(this);\n\n})();\n//@ sourceURL=helpers/handlebars");